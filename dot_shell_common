#!/bin/bash

####################
# Custom functions #
####################

# Check if a command exists
command_exists() {
  if command -v "$1" &>/dev/null; then
    return 0
  else
    return 1
  fi
}

# Fuzzy select a dir to CD into
function cdf() {
  cd "$(find . -type d -mindepth 1 -maxdepth 1 | xargs -I{} basename {} | fzf --query="${1:-}" --preview="ls -A {}" --select-1 --height 20)"
}

# Optionally source a file if it exists
source_optional() {
  # shellcheck source=/dev/null
  if [ -f "$1" ]; then
    source "$1"
  fi
}

# Source local version of a file
source_local() {
  source_optional "$HOME/.${1}.local"
}

###############
# Environment #
###############

# Add missing local bin paths to PATH
BIN_PATHS=(
  "$HOME/.local/bin"
  "$HOME/bin"
  "$HOME/.npm-global/bin"
  "$HOME/.cargo/bin"
  "$HOME/.composer/vendor/bin"
  "$HOME/.config/composer/vendor/bin"
  "$HOME/.yarn/bin"
  "$HOME/.pyenv/bin"
  "$HOME/.rbenv/bin"
  "$HOME/.deno/bin"
)
for bin_path in "${BIN_PATHS[@]}"; do
  if [ -d "$bin_path" ] && [[ ":$PATH:" != *":$bin_path:"* ]]; then
    export PATH="$bin_path:$PATH"
  fi
done

################
# Provisioning #
################

provision_mise() {
  curl https://mise.run | sh
}

provision_node() {
  command_exists mise || provision_mise
  mise use --global node
}

provision_python() {
  command_exists mise || provision_mise
  mise use --global node
}

# {{{ Provision Zig
provision_zig() {
  (
    set -e

    ZIG_VERSION="0.12.0"
    ZIG_HOME="$HOME/.local/share/zig"
    BIN_DIR="$HOME/.local/bin"

    mkdir -p "$ZIG_HOME"
    mkdir -p "$BIN_DIR"

    case "$(uname -s)" in
    Linux)
      OS="linux"
      ;;
    Darwin)
      OS="macos"
      ;;
    *)
      echo "Unsupported OS: $(uname -s)"
      exit 1
      ;;
    esac

    case "$(uname -m)" in
    x86_64)
      ARCH="x86_64"
      ;;
    aarch64 | arm64)
      ARCH="aarch64"
      ;;
    *)
      echo "Unsupported architecture: $(uname -m)"
      exit 1
      ;;
    esac

    FILENAME="zig-$OS-$ARCH-$ZIG_VERSION.tar.xz"
    DOWNLOAD_URL="https://ziglang.org/download/$ZIG_VERSION/$FILENAME"

    echo "Installing Zig $ZIG_VERSION for $OS-$ARCH to $ZIG_HOME..."
    echo
    curl -L "$DOWNLOAD_URL" | tar -xJ -C "$ZIG_HOME" --strip-components=1

    chmod +x "$ZIG_HOME/zig"
    ln -sf "$ZIG_HOME/zig" "$BIN_DIR/zig"
  )
}
# }}}

provision_all() {
  provision_mise
  provision_node
  provision_python
}

#############################
# Source local declarations #
#############################

source_local shell_common
